{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Layout/Header.svelte",
    "../src/Layout/ControlBar.svelte",
    "../src/Layout/QuizDisplay.svelte",
    "../src/GenericComponents/ToggleIconButton.svelte",
    "../src/GenericComponents/NumericDisplay.svelte",
    "../src/Layout/QuizIcon.svelte",
    "../src/Layout/EquationsDisplay.svelte",
    "../src/MultiplicationTable/MultiplicationTable.svelte",
    "../src/Layout/SingleEquation.svelte",
    "../src/GenericComponents/NumericInput.svelte",
    "../src/GenericComponents/NumericInputv2.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { writable } from \"svelte/store\";\n  import { setContext } from \"svelte\";\n  import { quizStore } from \"./stores/quizStore\";\n  import { scoreStore } from \"./stores/scoreStore\";\n  import { controllerStore } from \"./stores/controllerStore\";\n  import { inputStore } from \"./stores/inputStore\";\n\n  import { APP_PREFIX } from \"./quizzes/constants\";\n\n  import Header from \"./Layout//Header.svelte\";\n  import ControlBar from \"./Layout/ControlBar.svelte\";\n  import QuizDisplay from \"./Layout/QuizDisplay.svelte\";\n  import ToggleIconButton from \"./GenericComponents/ToggleIconButton.svelte\";\n\n  import { fetchData, submitQuizzes } from \"./api/api\";\n\n  setContext(\"quizStore\", quizStore);\n  setContext(\"scoreStore\", scoreStore);\n  setContext(\"controllerStore\", controllerStore);\n  setContext(\"inputStore\", inputStore);\n</script>\n\n<style>\n  :global(body, html) {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  .app {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    width: 100vw;\n    background-color: #e8ebeb;\n  }\n\n  .header {\n    /* margin-top: 10px; */\n  }\n\n  .main {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n  }\n\n  .footer {\n    min-height: 30vh;\n    width: 100%;\n    padding-bottom: 5vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n</style>\n\n<div class=\"app\">\n\n  <header class=\"header\">\n    <Header />\n  </header>\n\n  <main class=\"main\">\n    <QuizDisplay />\n  </main>\n\n  <footer class=\"footer\">\n    <ControlBar appPrefix={APP_PREFIX} />\n    <ToggleIconButton\n      turnOn={controllerStore.turnMicrophoneOn}\n      turnOff={controllerStore.turnMicrophoneOff} />\n  </footer>\n\n</div>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import NumericDisplay from \"../GenericComponents/NumericDisplay.svelte\";\n\n  let score;\n  let strikeLength;\n  let strikeText;\n\n  const scoreStore = getContext(\"scoreStore\");\n\n  scoreStore.subscribe(val => {\n    score = val;\n  });\n\n  scoreStore.subscribeToStrike(val => {\n    strikeLength = val;\n    strikeText = \"strike\";\n  });\n\n  let timer = \"00:00\";\n</script>\n\n<style>\n  .title {\n    font-size: 2em;\n  }\n  .wrapper {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    padding: 0 2rem;\n    background-color: white;\n    box-shadow: 0px 10px 10px 5px #8e9b9c;\n    border-radius: 0 0 5px 5px;\n    z-index: 10;\n  }\n\n  .strike {\n    position: absolute;\n    top: 8px;\n    right: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .text {\n    font-size: 0.5rem;\n    text-decoration: underline;\n  }\n\n  .number {\n    font-size: 1rem;\n    margin-left: 0.5rem;\n  }\n</style>\n\n<div class=\"wrapper\">\n\n  <NumericDisplay text=\"timer\" numbers={timer} />\n\n  <h1 class=\"title\">Count Fast!</h1>\n\n  <NumericDisplay text=\"score\" numbers={score}>\n    <div class=\"strike\">\n      <div class=\"text\">{strikeText}</div>\n      <div class=\"number\">{strikeLength}</div>\n    </div>\n  </NumericDisplay>\n\n</div>\n",
    "<script>\n  export let appPrefix;\n\n  import QuizIcon from \"./QuizIcon.svelte\";\n  import { getContext } from \"svelte\";\n\n  let selectedQuizName;\n  const quizStore = getContext(\"quizStore\", quizStore);\n\n  const names = quizStore.getAllQuizNames();\n\n  const handleIconClick = name => {\n    quizStore.goTo(name);\n  };\n\n  quizStore.subscribe(value => {\n    selectedQuizName = value.quizName;\n  });\n\n  const noPrefix = name =>\n    name.includes(appPrefix) && name.slice(appPrefix.length + 1, name.length);\n</script>\n\n<style>\n  .wrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n</style>\n\n<div class=\"wrapper\">\n\n  {#each names as name (name)}\n    <QuizIcon\n      name={noPrefix(name)}\n      id={name}\n      handleClick={handleIconClick}\n      isSelected={selectedQuizName === name} />\n  {/each}\n\n</div>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import { MULTIPLICATION_TABLE } from \"../quizzes/constants\";\n  import MultiplicationTable from \"../MultiplicationTable/MultiplicationTable.svelte\";\n  import EquationsDisplay from \"./EquationsDisplay.svelte\";\n\n  const quizStore = getContext(\"quizStore\");\n\n  let isMultiplicationTable;\n\n  quizStore.subscribe(value => {\n    isMultiplicationTable = value.quizName.includes(MULTIPLICATION_TABLE);\n  });\n</script>\n\n<style>\n  .wrapper {\n    width: 50%;\n    height: 50%;\n    /*  display: flex; */\n    border: 1px solid black;\n  }\n</style>\n\n<div class=\"wrapper\">\n  {#if isMultiplicationTable}\n    <MultiplicationTable setup={quizStore.getCurrentQuiz()} />\n  {:else}\n    <EquationsDisplay />\n  {/if}\n</div>\n",
    "<script>\n  export let turnOn;\n  export let turnOff;\n\n  let isSelectedMicrophone = false;\n\n  const onClick = () => {\n    isSelectedMicrophone ? turnOff() : turnOn();\n    isSelectedMicrophone = !isSelectedMicrophone;\n  };\n</script>\n\n<style>\n  .button {\n    border: 1px solid rgb(10, 7, 7);\n    border-radius: 30px;\n    min-width: 60px;\n    min-height: 60px;\n    display: flex;\n\n    justify-content: center;\n    align-items: center;\n    font-size: 1.5rem;\n    cursor: pointer;\n  }\n  .button:hover {\n    background-color: white;\n    transform: scale(1.05);\n    transition: ease-in-out;\n  }\n\n  .isSelected {\n  }\n</style>\n\n<div class=\"button\" on:click={onClick}>\n  {#if !isSelectedMicrophone}\n    <i class=\"fas fa-microphone\" />\n  {:else}\n    <i class=\"fas fa-keyboard\" />\n  {/if}\n</div>\n",
    "<script>\n  export let text;\n  export let numbers;\n</script>\n\n<style>\n  .timer-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* border: 3px solid black; */\n    font-size: 2rem;\n  }\n  .text {\n    font-size: 1rem;\n  }\n  .numbers {\n    margin-left: 20px;\n    font-size: 1.5rem;\n  }\n\n  .relative {\n    top: 60px;\n  }\n</style>\n\n<div class=\"timer-wrapper\">\n\n  <span class=\"text\">{text}</span>\n  <span class=\"numbers\">{numbers}</span>\n  <div class=\"relative\">\n    <slot />\n  </div>\n\n</div>\n",
    "<script>\n  export let name, id, handleClick, isSelected;\n  import { getContext } from \"svelte\";\n</script>\n\n<style>\n  .wrapper {\n    width: 150px;\n    height: 70px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    border: 1px solid black;\n    background-color: transparent;\n  }\n\n  .wrapper:hover {\n    cursor: pointer;\n    background-color: white;\n  }\n\n  .selected {\n    background-color: white;\n  }\n</style>\n\n<div\n  on:click={() => handleClick(id)}\n  class:selected={isSelected}\n  class=\"wrapper\">\n  {name}\n</div>\n",
    "<script>\n  import { getContext } from \"svelte\";\n  import SingleEquation from \"./SingleEquation.svelte\";\n\n  const quizStore = getContext(\"quizStore\");\n\n  let quizQuestion;\n  let answeredEquations;\n\n  quizStore.subscribe(val => {\n    quizQuestion = quizStore.getCurrentQuestion();\n    answeredEquations = quizStore.getCurrentQuiz().getAnsweredQuestions();\n  });\n</script>\n\n<style>\n  .wrapper {\n    width: 100%;\n    /* height: 100%; */\n  }\n  .answered {\n    /* display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    border: 1px solid black; */\n    /* bottom: -40px; */\n    filter: blur(2px);\n  }\n\n  .current {\n    position: relative;\n    top: 200px;\n  }\n</style>\n\n<div class=\"wrapper\">\n  <div class=\"answered\">\n    {#each answeredEquations as answeredEquation (answeredEquation.ID)}\n      <SingleEquation quizQuestion={answeredEquation} answered={true} />\n    {/each}\n  </div>\n  <div class=\"current\">\n    <SingleEquation {quizQuestion} />\n  </div>\n\n</div>\n",
    "<script>\n  import NumericInput from \"../GenericComponents/NumericInput.svelte\";\n  import { NavigationHandler } from \"./NavigationHandler\";\n  import {\n    parseIndex,\n    getXCoord,\n    getYCoord,\n    checkIfRowFieldShouldBeHighlighted,\n    checkIfColumnFieldShouldBeHighlighted\n  } from \"./helpers\";\n\n  export let setup;\n\n  let firstFieldIndex = 11;\n  let lastFieldIndex = 100;\n  let fieldsAnsweredCorrectly = [];\n  let fieldsAnsweredInorrectly = [];\n\n  $: focusedFieldIndex = firstFieldIndex;\n  $: allAnsweredFieldsIndexes = [\n    ...fieldsAnsweredCorrectly,\n    ...fieldsAnsweredInorrectly\n  ].map(parseIndex);\n\n  const navigationHandler = new NavigationHandler({\n    firstFieldIndex,\n    lastFieldIndex,\n    listener: val => {\n      focusedFieldIndex = val;\n    }\n  });\n\n  function handleFocus(index) {\n    navigationHandler.set(index);\n  }\n\n  function isCellLast(questionIndex) {\n    return parseIndex(questionIndex) === setup.getAllQuestions().length - 1;\n  }\n</script>\n\n<style>\n  .table-wrapper {\n    display: grid;\n    grid-template-rows: repeat(10, 3rem);\n    grid-template-columns: repeat(10, 3rem);\n    column-gap: 8px;\n    row-gap: 8px;\n    padding: 15px;\n    background-color: white;\n    border-radius: 5px;\n    box-shadow: 10px 10px 10px 5px #8e9b9c;\n  }\n  .cell {\n    border: 1px solid black;\n    border-radius: 2px;\n    width: 100%;\n    height: 100%;\n    font-size: 1.5rem;\n  }\n\n  .cell-last {\n    font-size: 1.1rem;\n  }\n  .title {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 2px solid black;\n  }\n\n  .highlighted-column {\n    box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.7);\n  }\n\n  .highlighted-row {\n    box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.7);\n  }\n\n  .focused-field {\n    transform: scale(1.05);\n  }\n\n  .correct {\n    outline: 5px solid green;\n    outline-offset: -7px;\n  }\n\n  .incorrect {\n    outline: 5px solid red;\n    outline-offset: -7px;\n  }\n</style>\n\n<div class=\"table-wrapper\">\n  {#each setup.getAllQuestions() as question (question.ID)}\n    <div\n      class={'cell'}\n      class:title={parseIndex(question.ID) < 10 || parseIndex(question.ID) % 10 == 0}\n      class:correct={fieldsAnsweredCorrectly.includes(question.ID)}\n      class:incorrect={fieldsAnsweredInorrectly.includes(question.ID)}\n      class:highlighted-column={checkIfColumnFieldShouldBeHighlighted(question.ID, focusedFieldIndex)}\n      class:highlighted-row={checkIfRowFieldShouldBeHighlighted(question.ID, focusedFieldIndex)}\n      class:focused-field={parseIndex(question.ID) === focusedFieldIndex}\n      class:cell-last={isCellLast(question.ID)}>\n\n      {#if parseIndex(question.ID) < 10 || parseIndex(question.ID) % 10 == 0}\n        <div>{question.correctAnswers[0]}</div>\n      {:else}\n        <NumericInput\n          index={parseIndex(question.ID)}\n          maxLength={isCellLast(question.ID) ? 3 : 2}\n          isFocused={parseIndex(question.ID) == focusedFieldIndex}\n          onFocus={el => handleFocus(parseIndex(question.ID), el)}\n          onSubmit={answer => question.submitAnswer(answer)}\n          onNavigate={key => navigationHandler.handleKey(allAnsweredFieldsIndexes)(key)} />\n      {/if}\n\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  export let answered;\n  export let quizQuestion;\n  import NumericInputv2 from \"../GenericComponents/NumericInputv2.svelte\";\n  import { INPUT_SYMBOL } from \"../quizzes/constants\";\n</script>\n\n<style>\n  .wrapper {\n    /* background-color: white; */\n    display: flex;\n  }\n\n  .cell {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.5rem;\n    margin: 0 0.2rem;\n  }\n\n  .input {\n    border: 1px solid black;\n    border-radius: 2px;\n    width: 3rem;\n    height: 3rem;\n  }\n\n  .symbol {\n  }\n</style>\n\n<div class=\"wrapper\">\n  {#each quizQuestion.getAsArray() as element}\n    <div class=\"cell\">\n      {#if element === INPUT_SYMBOL && !answered}\n        <div class=\"input\">\n          <NumericInputv2\n            value={4}\n            maxLength={quizQuestion.getCorrectAnswer().length}\n            submittedValue={quizQuestion.getLastSubmittedAnswer()} />\n        </div>\n      {:else}\n        <div class=\"symbol\">{element}</div>\n      {/if}\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  import { onMount, onDestroy, beforeUpdate, afterUpdate } from \"svelte\";\n  export let onSubmit;\n  export let onNavigate;\n  export let onFocus;\n  export let isFocused;\n  export let maxLength;\n\n  const value = Math.ceil(Math.random() * 1000);\n\n  onMount(() => {\n    console.log(\"mounted\", value);\n  });\n\n  onDestroy(() => {\n    console.log(\"onDestroy\", value);\n  });\n\n  beforeUpdate(() => {\n    console.log(\"beforeUpdate\", value);\n  });\n  afterUpdate(() => {\n    console.log(\"afterUpdate\", value);\n  });\n\n  let inputNode;\n  let inputValue = \"\";\n  let isInvalid = false;\n\n  $: isFocused && inputNode && inputNode.focus();\n  $: isInvalid = inputValue && isNaN(parseInt(inputValue));\n\n  function handleSubmit(e) {\n    !isInvalid && onSubmit(e.target.value);\n  }\n\n  function handleKeydown(e) {\n    !isInvalid && onNavigate(e.key);\n  }\n\n  function handleInput() {\n    isInvalid && console.log(\"It's invalid!!!\");\n  }\n\n  function handleFocus() {\n    onFocus();\n  }\n</script>\n\n<style>\n  input {\n    border: none;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    margin: 0;\n    color: blue;\n  }\n  .invalid {\n    background-color: pink;\n  }\n\n  input:focus {\n    outline: none;\n  }\n</style>\n\n<input\n  type=\"text\"\n  maxlength={maxLength}\n  class:invalid={isInvalid}\n  bind:this={inputNode}\n  bind:value={inputValue}\n  on:input={handleInput}\n  on:change={handleSubmit}\n  on:focus={handleFocus}\n  on:keydown={handleKeydown} />\n",
    "<script>\n  import { onDestroy, beforeUpdate, afterUpdate } from \"svelte\";\n  import { getContext } from \"svelte\";\n\n  import { onMount } from \"svelte\";\n\n  export let onSubmit;\n  export let onNavigate;\n  export let onFocus;\n  export let maxLength;\n  // export let value;\n\n  const inputStore = getContext(\"inputStore\");\n  const quizStore = getContext(\"quizStore\");\n  const controllerStore = getContext(\"controllerStore\");\n\n  let inputNode;\n  let isFocused;\n  let displayedInputValue;\n\n  inputStore.subscribe(val => {\n    displayedInputValue = inputStore.getValue();\n    inputNode && inputNode.focus();\n  });\n\n  beforeUpdate(() => {\n    displayedInputValue && inputStore.onInput(displayedInputValue);\n  });\n\n  afterUpdate(() => {\n    displayedInputValue = inputStore.getValue();\n  });\n\n  $: inputNode && inputNode.focus();\n\n  const handleFocus = () => {\n    isFocused = true;\n  };\n\n  const handleBlur = () => {\n    isFocused = false;\n  };\n\n  const handleSubmit = () => {\n    quizStore.onSubmitAnswer(displayedInputValue);\n    inputStore.resetValue();\n    controllerStore.resetMicrophone();\n  };\n\n  const handleKeydown = e => {\n    if (e.code === \"Enter\") handleSubmit();\n    if (typeof onNavigate === \"function\") onNavigate(e.key);\n  };\n</script>\n\n<style>\n  input {\n    border: none;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    margin: 0;\n    color: blue;\n  }\n  input:focus {\n    outline: none;\n  }\n\n  .focused {\n    transform: scale(1.05);\n    box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.7);\n  }\n\n  .blurred {\n    background-color: transparent;\n  }\n</style>\n\n<input\n  class:focused={isFocused}\n  class:blurred={!isFocused}\n  on:focus={handleFocus}\n  on:blur={handleBlur}\n  on:keydown={handleKeydown}\n  bind:value={displayedInputValue}\n  bind:this={inputNode}\n  maxlength={maxLength}\n  type=\"text\" />\n"
  ],
  "names": [],
  "mappings": "AAwBU,UAAU,AAAE,CAAC,AACnB,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,OAAO,eAAC,CAAC,AAET,CAAC,AAED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,OAAO,eAAC,CAAC,AACP,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,cAAc,CAAE,GAAG,CACnB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC;ACnCD,MAAM,eAAC,CAAC,AACN,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CACrC,aAAa,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAC1B,OAAO,CAAE,EAAE,AACb,CAAC,AAED,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,MAAM,CACjB,eAAe,CAAE,SAAS,AAC5B,CAAC,AAED,OAAO,eAAC,CAAC,AACP,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,AACrB,CAAC;AC9BD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,YAAY,CAC7B,WAAW,CAAE,MAAM,AACrB,CAAC;ACdD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CAEX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AACzB,CAAC;ACRD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/B,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CAEb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,qBAAO,MAAM,AAAC,CAAC,AACb,gBAAgB,CAAE,KAAK,CACvB,SAAS,CAAE,MAAM,IAAI,CAAC,CACtB,UAAU,CAAE,WAAW,AACzB,CAAC,AAEW,CAAC,AACb,CAAC;AC1BD,cAAc,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CAEnB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,MAAM,AACnB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,GAAG,CAAE,IAAI,AACX,CAAC;ACjBD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CAEZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CAEnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,gBAAgB,CAAE,WAAW,AAC/B,CAAC,AAED,uBAAQ,MAAM,AAAC,CAAC,AACd,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,gBAAgB,CAAE,KAAK,AACzB,CAAC;ACTD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,AAEb,CAAC,AACD,SAAS,eAAC,CAAC,AAMT,MAAM,CAAE,KAAK,GAAG,CAAC,AACnB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,AACZ,CAAC;ACUD,cAAc,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CACpC,qBAAqB,CAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CACvC,UAAU,CAAE,GAAG,CACf,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,KAAK,CACvB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,AACxC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,MAAM,AACnB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,SAAS,CAAE,MAAM,AACnB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AACzB,CAAC,AAED,mBAAmB,cAAC,CAAC,AACnB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAChD,CAAC,AAED,gBAAgB,cAAC,CAAC,AAChB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAChD,CAAC,AAED,cAAc,cAAC,CAAC,AACd,SAAS,CAAE,MAAM,IAAI,CAAC,AACxB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACxB,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACtB,cAAc,CAAE,IAAI,AACtB,CAAC;ACrFD,QAAQ,eAAC,CAAC,AAER,OAAO,CAAE,IAAI,AACf,CAAC,AAED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,MAAM,AAClB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AAED,OAAO,eAAC,CAAC,AACT,CAAC;ACqBD,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACb,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,oBAAK,MAAM,AAAC,CAAC,AACX,OAAO,CAAE,IAAI,AACf,CAAC;ACRD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACb,CAAC,AACD,mBAAK,MAAM,AAAC,CAAC,AACX,OAAO,CAAE,IAAI,AACf,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,SAAS,CAAE,MAAM,IAAI,CAAC,CACtB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAChD,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,gBAAgB,CAAE,WAAW,AAC/B,CAAC"
}