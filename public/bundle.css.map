{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Header.svelte",
    "../src/MultiplicationTable/MultiplicationTable.svelte",
    "../src/GenericComponents/NumericInput.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Header from \"./Header.svelte\";\n  import MultiplicationTable from \"./MultiplicationTable/MultiplicationTable.svelte\";\n</script>\n\n<style>\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n</style>\n\n<h1>\n  <Header />\n  <MultiplicationTable />\n</h1>\n",
    "<script>\n  let name = \"world\";\n</script>\n\n<style>\n  p {\n    color: purple;\n    font-family: \"Comic Sans MS\";\n    font-size: 2em;\n  }\n</style>\n\n<h1>\n  <p>CountFast!</p>\n</h1>\n",
    "<script>\n  import Quiz from \"../Quiz.ts\";\n  import NumericInput from \"../GenericComponents/NumericInput.svelte\";\n  import MultiplicationTable from \"../MultiplicationTable\";\n  import { NavigationHandler } from \"./NavigationHandler\";\n  import {\n    parseIndex,\n    getXCoord,\n    getYCoord,\n    checkIfRowFieldShouldBeHighlighted,\n    checkIfColumnFieldShouldBeHighlighted\n  } from \"./helpers\";\n\n  let currentFieldIndex;\n  let firstFieldIndex = 11;\n  let lastFieldIndex = 100;\n  let focusedFieldIndex = firstFieldIndex;\n  let fieldsAnsweredCorrectly = [];\n  let fieldsAnsweredInorrectly = [];\n\n  const multiplicationTableQuiz = new Quiz(\n    new MultiplicationTable(10).getQAPair(),\n    \"mt\",\n    {\n      onSubmitAnswer: () => {\n        goRight();\n      },\n      onSubmitCorrectAnswer: id => {\n        fieldsAnsweredCorrectly = [...fieldsAnsweredCorrectly, id];\n      },\n      onSubmitIncorrectAnswer: id => {\n        fieldsAnsweredInorrectly = [...fieldsAnsweredInorrectly, id];\n      }\n    }\n  );\n\n  const navigationHandler = new NavigationHandler({\n    firstFieldIndex,\n    lastFieldIndex,\n    listener: val => {\n      focusedFieldIndex = val;\n    }\n  });\n\n  $: allAnsweredFieldsIndexes = [\n    ...fieldsAnsweredCorrectly,\n    ...fieldsAnsweredInorrectly\n  ].map(parseIndex);\n\n  $: focusedFieldIndex;\n</script>\n\n<style>\n  .table-wrapper {\n    padding: 2rem;\n    display: grid;\n    grid-template-rows: repeat(10, 4rem);\n    grid-template-columns: repeat(10, 4rem);\n    column-gap: 8px;\n    row-gap: 8px;\n    border: 3px solid blue;\n  }\n  .cell {\n    border: 2px solid black;\n    width: 100%;\n    height: 100%;\n  }\n  .visible {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .highlightedColumn {\n    border-left: 4px solid black;\n    border-right: 4px solid black;\n  }\n\n  .highlightedRow {\n    border-top: 4px solid black;\n    border-bottom: 4px solid black;\n  }\n\n  .correct {\n    outline: 5px solid green;\n    outline-offset: -7px;\n  }\n\n  .incorrect {\n    outline: 5px solid red;\n    outline-offset: -7px;\n  }\n</style>\n\n<div class=\"table-wrapper\">\n  {#each multiplicationTableQuiz.getQuestions() as question (question.index)}\n    <div\n      class={'cell'}\n      class:correct={fieldsAnsweredCorrectly.includes(question.index)}\n      class:incorrect={fieldsAnsweredInorrectly.includes(question.index)}\n      class:highlightedColumn={checkIfColumnFieldShouldBeHighlighted(question.index, focusedFieldIndex)}\n      class:highlightedRow={checkIfRowFieldShouldBeHighlighted(question.index, focusedFieldIndex)}>\n\n      {#if parseIndex(question.index) < 10 || parseIndex(question.index) % 10 == 0}\n        <div class={'visible'}>{question.correctAnswers[0]}</div>\n      {:else}\n        <div>\n          <NumericInput\n            isFocused={parseIndex(question.index) == focusedFieldIndex}\n            onSubmit={answer => multiplicationTableQuiz.submitAnswer(answer, question.index)}\n            onNavigate={key => navigationHandler.handleKey(allAnsweredFieldsIndexes)(key)} />\n        </div>\n      {/if}\n\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  export let onSubmit;\n  export let onNavigate;\n  export let isFocused;\n\n  let inputNode;\n  let inputValue = \"\";\n  let isInvalid = false;\n\n  $: isFocused && inputNode && inputNode.focus();\n  $: isInvalid = inputValue && isNaN(parseInt(inputValue));\n\n  function handleSubmit(e) {\n    !isInvalid && onSubmit(e.target.value);\n  }\n\n  function keydownHandler(e) {\n    !isInvalid && onNavigate(e.key);\n  }\n\n  function handleInput() {\n    isInvalid && console.log(\"It's invalid!!!\");\n  }\n</script>\n\n<style>\n  input {\n    border: none;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    margin: 0;\n    color: blue;\n  }\n  .invalid {\n    background-color: pink;\n  }\n</style>\n\n<input\n  type=\"text\"\n  maxlength=\"2\"\n  class:invalid={isInvalid}\n  bind:this={inputNode}\n  bind:value={inputValue}\n  on:input={handleInput}\n  on:change={handleSubmit}\n  on:keydown={keydownHandler} />\n"
  ],
  "names": [],
  "mappings": "AAME,cAAE,CAAC,AACD,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACZ,CAAC;ACLD,CAAC,eAAC,CAAC,AACD,KAAK,CAAE,MAAM,CACb,WAAW,CAAE,eAAe,CAC5B,SAAS,CAAE,GAAG,AAChB,CAAC;AC4CD,cAAc,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CACpC,qBAAqB,CAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CACvC,UAAU,CAAE,GAAG,CACf,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AACxB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,kBAAkB,cAAC,CAAC,AAClB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC5B,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AAC/B,CAAC,AAED,eAAe,cAAC,CAAC,AACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC3B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AAChC,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACxB,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACtB,cAAc,CAAE,IAAI,AACtB,CAAC;ACnED,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACb,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,gBAAgB,CAAE,IAAI,AACxB,CAAC"
}